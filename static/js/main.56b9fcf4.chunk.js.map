{"version":3,"sources":["assets/radioactivo.png","assets/bomba.png","assets/acero.png","components/Header/styles.ts","components/Header/Header.tsx","components/Timer/style.ts","components/Timer/Timer.tsx","components/Body/style.ts","components/Body/Body.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","HeaderContainer","styled","div","_templateObject","Object","taggedTemplateLiteral","radioactivo","Header","react_default","a","createElement","className","src","bomba","alt","TimerContainer","style_templateObject","BarButtonContainer","_templateObject2","ButtonStyled","button","_templateObject3","TextFiedStyled","TextField","_templateObject4","DialogContentStyled","DialogContent","_templateObject5","DialoActionStyled","DialogActions","_templateObject6","Timer","_ref","_ref$minutes","minutes","_ref$seconds","seconds","_ref$code","code","_useState","useState","_useState2","slicedToArray","mins","setMinutes","_useState3","_useState4","secs","setSeconds","_useState5","_useState6","result","setResult","_useState7","_useState8","open","setOpen","_useState9","_useState10","text","setText","_useState11","_useState12","explota","setExplota","_useState13","_useState14","selected","setSelected","_useState15","_useState16","password","setPassword","_useState17","_useState18","theme","setTheme","_useState19","_useState20","start","setStart","useEffect","sampleInterval","setInterval","clearInterval","handleClose","Select","labelId","id","value","label","onChange","event","console","log","target","esto","MenuItem","concat","type","e","trim","onClick","Dialog","onClose","aria-labelledby","aria-describedby","DialogContentText","Button","disabled","autoFocus","BodyContainer","Body_style_templateObject","acero","Body","components_Timer_Timer","App","components_Header_Header","components_Body_Body","reportWebVitals","onPerfEntry","Function","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.56b9fcf4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/radioactivo.9add6220.png\";","module.exports = __webpack_public_path__ + \"static/media/bomba.c858e00b.png\";","module.exports = __webpack_public_path__ + \"static/media/acero.6e1264de.png\";","import styled from \"@emotion/styled\";\r\nimport radioactivo from \"../../assets/radioactivo.png\";\r\n\r\n\r\n\r\n\r\n\r\nexport const HeaderContainer = styled.div`\r\n    background-image: url(${radioactivo});\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    height: 75px;\r\n    background-color: red;\r\n    justify-content: end;\r\n    aling-items: center;\r\n    & .bomba {\r\n    position: fixed;\r\n    top: 150px;\r\n    width: 500px;\r\n    }\r\n`","import { InputLabel, MenuItem, Select, SelectChangeEvent } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { HeaderContainer } from \"./styles\";\r\nimport bomba  from \"../../assets/bomba.png\";\r\n\r\nconst Header = () => {\r\n\r\n    return (\r\n    <HeaderContainer className=\"header\">\r\n        <img src={bomba} alt=\"bomba\" className=\"bomba\"/>\r\n    </HeaderContainer>\r\n    );\r\n}\r\n\r\nexport default Header;","import styled from \"@emotion/styled\";\r\nimport { Dialog, DialogActions, DialogContent, TextField, withStyles, withTheme } from \"@mui/material\";\r\nimport { color } from \"@mui/system\";\r\n\r\n\r\nexport const TimerContainer= styled.div`\r\ndisplay: flex;\r\njustify-content: center;\r\nflex-direction: column;\r\nalign-items: center;\r\nheight: 100%;\r\ncolor: black;\r\nh2{\r\n  font-size: 30px;\r\n}\r\n& .este {\r\n  background-color: white;\r\n  min-width: 100px;\r\n}\r\n`;\r\n\r\nexport const BarButtonContainer = styled.div`\r\n  display: flex;\r\n  margin-top: 20px;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  width: 200px;\r\n`\r\n\r\nexport const ButtonStyled = styled.button`\r\n  text-align: center;\r\n  width: 80px;\r\n  height: 50px;\r\n`\r\n\r\nexport const TextFiedStyled = styled(TextField)`\r\n\r\n`;\r\n\r\n\r\nexport const DialogContentStyled = styled(DialogContent)`\r\n&.correcto {\r\n  background-color:#008000\r\n  ;\r\n}\r\n&.bomba {\r\n  background-color: black;\r\n  color: white;\r\n  & .dialogText {\r\n    text-align: center;\r\n    color: white;\r\n    font-weight: bold;\r\n  }\r\n}\r\nbackground-color: red;\r\n  & .dialogText {\r\n    text-align: center;\r\n    color: black;\r\n    font-weight: bold;\r\n  }\r\n`\r\n\r\nexport const DialoActionStyled = styled(DialogActions)`\r\n  &.correcto {\r\n    background-color:#008000;\r\n  }\r\n\r\n  &.bomba {\r\n    background-color: black;\r\n    color: white;\r\n    & .dialogText {\r\n      text-align: center;\r\n      color: white;\r\n      font-weight: bold;\r\n    }\r\n  }\r\n  background-color: red;\r\n`;","import { Button, Dialog, DialogActions, DialogContent, DialogContentText, MenuItem, Select, SelectChangeEvent } from '@mui/material';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { BarButtonContainer, ButtonStyled, DialoActionStyled, DialogContentStyled, TextFiedStyled, TimerContainer } from './style';\r\n\r\ninterface ITimer {\r\n    minutes?: number;\r\n    seconds?: number;\r\n    code?: string;\r\n};\r\n\r\nconst Timer = ({minutes = 15, seconds = 0, code= \"esto no esta selected\"} : ITimer) => {\r\n\r\n    const [mins, setMinutes] = useState(minutes);\r\n    const [secs, setSeconds] = useState(seconds);\r\n    const [result, setResult] = useState(code); //el codigo\r\n    const [open, setOpen] = useState(false);\r\n    const [text, setText] = useState(\"INTENTALO DE NUEVO\"); //texto del modal\r\n    const [explota, setExplota] = useState(false);\r\n    const [selected, setSelected] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [theme, setTheme] = useState(\"normal\");\r\n    const [start,setStart] = useState(false)\r\n\r\n    useEffect(() => {\r\n      if(start){\r\n        let sampleInterval = setInterval(() => {\r\n          if (secs > 0) {\r\n            setSeconds(secs - 1);\r\n          }\r\n          if (secs === 0) {\r\n            if (mins === 0) {\r\n              clearInterval(sampleInterval);\r\n              setText(\"Bomba Explotada\");\r\n              setTheme(\"bomba\");\r\n              setOpen(true);\r\n              setExplota(true);\r\n            } else {\r\n              setMinutes(mins - 1);\r\n              setSeconds(59);\r\n            }\r\n          }\r\n        }, 1000);\r\n        return () => {\r\n          clearInterval(sampleInterval);\r\n        };\r\n      }\r\n\r\n      });\r\n\r\n    const onClickReset = () => {\r\n        setStart(true);\r\n    }\r\n\r\n    const onClickCheck = () => {\r\n      setOpen(true)\r\n    }\r\n\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }\r\n\r\n    const validateResult = (data : string) => {\r\n\r\n      if(data.trim() === result.trim()){\r\n        setText(\"PASSWORD CORRECTO\");\r\n        setTheme(\"correcto\");\r\n        setSeconds(15);\r\n        setStart(false);\r\n      }else {\r\n        setText(\"INTENTALO DE NUEVO\");\r\n        setTheme(\"no\");\r\n      }\r\n    }\r\n\r\n    const handleChange = (event: SelectChangeEvent) => {\r\n      console.log(\"evento tal y cual  \", event.target)\r\n      let esto = event.target.value as string;\r\n      setResult(esto); // echale una revisada  a esto\r\n      setPassword(\"\");\r\n      setText(\"INTENTALO DE NUEVO\");\r\n      setSelected(event.target.value as string);\r\n  };\r\n    return (\r\n    <TimerContainer>\r\n        <Select\r\n        className='este'\r\n        labelId=\"demo-simple-select-label\"\r\n        id=\"demo-simple-select\"\r\n        value={selected}\r\n        label=\"Select curso\"\r\n        onChange={handleChange}\r\n        >\r\n            <MenuItem value={\"95767256\"}>VERDE</MenuItem>\r\n            <MenuItem value={\"75796562\"}>AMARILLO</MenuItem>\r\n            <MenuItem value={\"62675795\"}>ROJO</MenuItem>\r\n        </Select>\r\n        <h2>{mins}:{secs < 10 ? `0${secs}` : secs}</h2>\r\n        <TextFiedStyled\r\n                className='este'\r\n                value={password}\r\n                type=\"tel\"\r\n                label=\"Introduce la contraseña\"\r\n                onChange={(e) => {\r\n                    validateResult(e.target.value);\r\n                    setPassword(e.target.value);\r\n                }}\r\n            />\r\n        <BarButtonContainer>\r\n          <ButtonStyled onClick={onClickCheck}> Comprobar </ButtonStyled>\r\n          <ButtonStyled onClick={onClickReset}> Empezar </ButtonStyled>\r\n        </BarButtonContainer>\r\n        <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogContentStyled className={theme}>\r\n          <DialogContentText id=\"alert-dialog-description\" className='dialogText'>\r\n              {text}\r\n          </DialogContentText>\r\n        </DialogContentStyled>\r\n        <DialoActionStyled className={theme}>\r\n          <Button onClick={handleClose} disabled={explota} autoFocus>\r\n            Agree\r\n          </Button>\r\n        </DialoActionStyled>\r\n      </Dialog>\r\n    </TimerContainer>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\nexport default Timer;","import styled from \"@emotion/styled\";\r\nimport acero from \"../../assets/acero.png\";\r\n\r\n\r\nexport const BodyContainer = styled.div`\r\n    background-image: url(${acero});\r\n    background-size: cover;\r\n    display:flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 100%;\r\n    color: white;\r\n`","import React, { useState, useEffect } from 'react';\r\nimport Timer from '../Timer/Timer';\r\nimport { BodyContainer } from './style';\r\n\r\n\r\nconst Body = () => {\r\n    return (\r\n        <BodyContainer>\r\n            <Timer/>\r\n        </BodyContainer>\r\n    )\r\n}\r\n\r\n\r\nexport default Body;\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Body from './components/Body/Body';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Body/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}