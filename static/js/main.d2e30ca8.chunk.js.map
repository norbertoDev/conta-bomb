{"version":3,"sources":["components/Header/styles.ts","components/Header/Header.tsx","components/Timer/style.ts","components/Timer/Timer.tsx","components/Body/style.ts","components/Body/Body.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["HeaderContainer","styled","div","_templateObject","Object","taggedTemplateLiteral","Header","react_default","a","createElement","TimerContainer","style_templateObject","BarButtonContainer","_templateObject2","ButtonStyled","button","_templateObject3","Timer","_ref","_ref$minutes","minutes","_ref$seconds","seconds","_useState","useState","_useState2","slicedToArray","mins","setMinutes","_useState3","_useState4","secs","setSeconds","_React$useState","React","_React$useState2","open","setOpen","_useState5","_useState6","text","useEffect","sampleInterval","setInterval","clearInterval","handleClose","console","log","concat","TextField","helperText","onClick","Dialog","onClose","aria-labelledby","aria-describedby","DialogContent","DialogContentText","id","DialogActions","Button","autoFocus","BodyContainer","Body_style_templateObject","Body","components_Timer_Timer","App","className","components_Header_Header","components_Body_Body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.d2e30ca8.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\n\r\n\r\n\r\n\r\nexport const HeaderContainer = styled.div`\r\n    height: 75px;\r\n    background-color: red;\r\n`","import React from \"react\";\r\nimport { HeaderContainer } from \"./styles\";\r\n\r\nconst Header = () => {\r\n    return (\r\n    <HeaderContainer>\r\n        esto es el header\r\n    </HeaderContainer>\r\n    );\r\n}\r\n\r\nexport default Header;","import styled from \"@emotion/styled\";\r\n\r\n\r\nexport const TimerContainer= styled.div`\r\ndisplay: flex;\r\njustify-content: center;\r\nflex-direction: column;\r\nalign-items: center;\r\nheight: 100%;\r\n`;\r\n\r\nexport const BarButtonContainer = styled.div`\r\n  display: flex;\r\n  margin-top: 20px;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  width: 200px;\r\n`\r\n\r\nexport const ButtonStyled = styled.button`\r\n  width: 70px;\r\n  height: 30px;\r\n`","import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, TextField } from '@mui/material';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { BarButtonContainer, ButtonStyled, TimerContainer } from './style';\r\n\r\ninterface ITimer {\r\n    minutes?: number;\r\n    seconds?: number;\r\n};\r\n\r\nconst Timer = ({minutes = 0, seconds = 10} : ITimer) => {\r\n\r\n    const [mins, setMinutes] = useState(minutes);\r\n    const [secs, setSeconds] = useState(seconds);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [text, setText] = useState(\"PASSWORD CORRECTO\");\r\n\r\n    useEffect(() => {\r\n        let sampleInterval = setInterval(() => {\r\n          if (secs > 0) {\r\n            setSeconds(secs - 1);\r\n          }\r\n          if (secs === 0) {\r\n            if (mins === 0) {\r\n              clearInterval(sampleInterval);\r\n            } else {\r\n              setMinutes(mins - 1);\r\n              setSeconds(59);\r\n            }\r\n          }\r\n        }, 1000);\r\n        return () => {\r\n          clearInterval(sampleInterval);\r\n        };\r\n      });\r\n\r\n    const onClickReset = () => {\r\n        setSeconds(10)\r\n    }\r\n\r\n    const onClickCheck = () => {\r\n      setOpen(true)\r\n    }\r\n\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }\r\n    console.log(\"mins\", mins);\r\n    console.log(\"secs\", secs);\r\n    return (\r\n    <TimerContainer>\r\n        <h2>{mins}:{secs < 10 ? `0${secs}` : secs}</h2>\r\n        <TextField helperText= {\"esto es la prueba de un helper text\"}></TextField>\r\n        <BarButtonContainer>\r\n          <ButtonStyled onClick={onClickCheck}> Check </ButtonStyled>\r\n          <ButtonStyled onClick={onClickReset}> Start </ButtonStyled>\r\n        </BarButtonContainer>\r\n        <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n              {text}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} autoFocus>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </TimerContainer>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\nexport default Timer;","import styled from \"@emotion/styled\";\r\n\r\n\r\nexport const BodyContainer = styled.div`\r\n    background-color: blue;\r\n    display:flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 100%;\r\n    color: white;\r\n`","import React, { useState, useEffect } from 'react';\r\nimport Timer from '../Timer/Timer';\r\nimport { BodyContainer } from './style';\r\n\r\n\r\nconst Body = () => {\r\n    return (\r\n        <BodyContainer>\r\n            <Timer/>\r\n        </BodyContainer>\r\n    )\r\n}\r\n\r\n\r\nexport default Body;\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Body from './components/Body/Body';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Body/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}